from tkinter import *
from tkinter import messagebox
import random
import pyperclip
import json

LETTERS = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't',
           'v', 'w', 'x', 'y', 'z']
VOVELS = ['a', 'e', 'i', 'o', 'u']
CAPITAL_LETTERS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
           'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
NUMBERS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
SYMBOLS = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

# ---------------------------- SEARCH PASSWORD ------------------------------- #

def search():
    website = website_entry.get().title()
    try:
        with open("data.json", "r") as data_file:
            # Reading old data
            data = json.load(data_file)
            messagebox.showinfo(title=website, message=f"Email: {data[website]['Email/Username']}\nPassword: {data[website]['Password']}")
    except KeyError:
        messagebox.showinfo(title="Error",
                            message=f"No data was found from {website} website")
    except FileNotFoundError:
        messagebox.showinfo(message="The file you are trying to search from was not found")

# ---------------------------- PASSWORD GENERATOR ------------------------------- #


def generate_new_password():
    password_entry.delete(0, END)
    random_chars = []
    password_generated = ""

    for letter in range(10):
        random_chars.append(random.choice(LETTERS))
    random_chars.append(random.choice(CAPITAL_LETTERS))
    random_chars.append(random.choice(NUMBERS))

    random.shuffle(random_chars)

    count = 0
    random_chars_index = 0
    for char in range(20):
        if count == 6 or count == 13:
            password_generated += "-"
        elif count == 1 or count == 4 or count == 8 or count == 11 or count == 15 or count == 18:
            password_generated += random.choice(VOVELS)
        else:
            password_generated += random_chars[random_chars_index]
            random_chars_index += 1
        count += 1
    password_entry.insert(0, password_generated)
    pyperclip.copy(password_generated)


# ---------------------------- SAVE PASSWORD ------------------------------- #


def save():
    website = website_entry.get().title()
    email = email_entry.get()
    password = password_entry.get()
    new_data = {
        website: {
            "Email/Username": email,
            "Password": password
        }
    }

    if len(website) == 0 or len(password) == 0 or len(email) == 0:
        messagebox.showinfo(title="Oops!", message="Please make sure all of the fields are filled")

    else:
        try:
            with open("data.json", "r") as data_file:
                #Reading old data
                data = json.load(data_file)
                #Updating data
                data.update(new_data)
        except FileNotFoundError:
            with open("data.json", "w") as data_file:
                #Dumping the new data to the existing file
                json.dump(new_data, data_file, indent=4)
        else:
            with open("data.json", "w") as data_file:
                #Dumping the new data to the existing file
                json.dump(data, data_file, indent=4)
        finally:
            website_entry.delete(0, END)
            password_entry.delete(0, END)
        messagebox.showinfo(message="Your details were added to data.txt")


# ---------------------------- UI SETUP ------------------------------- #


window = Tk()
window.title("Password Managerüîê")
window.config(padx=50, pady=50)
canvas = Canvas(width=200, height=200)
lock_image = PhotoImage(file="logo.png")
canvas.create_image(100, 100, image=lock_image)
canvas.grid(row=0, column=1)

website_label = Label(text="Website:")
website_label.grid(row=1, column=0)

website_entry = Entry(width=21)
website_entry.grid(row=1, column=1)

email_label = Label(text="Email/Username:")
email_label.grid(row=2, column=0)

email_entry = Entry(width=35)
email_entry.grid(row=2, column=1, columnspan=2)
email_entry.insert(0, "email@domain.com")

password_label = Label(text="Password:")
password_label.grid(row=3, column=0)

password_entry = Entry(width=21)
password_entry.grid(row=3, column=1)

password_button = Button(text="Generate Password", command=generate_new_password)
password_button.grid(row=3, column=2)

add_button = Button(text="Add", width=36, command=save)
add_button.grid(row=4, column=1, columnspan=2)

search_button = Button(text="Search", width=14, command=search)
search_button.grid(row=1, column=2)

window.mainloop()
